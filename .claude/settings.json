{
  "preferredNotifChannel": "terminal_bell",
  "taskCompletionNotification": true,
  "implementationCheckReminder": true,
  "errorNotificationEnabled": true,
  "permissions": {
    "allow": [
      "Bash(rg*)",
      "Bash(grep*)",
      "Bash(grep -*)",
      "Bash(*grep*)",
      "Bash(find*)",
      "Bash(find -*)",
      "Bash(ls*)",
      "Bash(cat*)",
      "Bash(head*)",
      "Bash(tail*)",
      "Bash(wc*)",
      "Bash(dotnet*)",
      "Bash(git status*)",
      "Bash(git log*)",
      "Bash(git diff*)",
      "Bash(gemini*)",
      "Edit(*)",
      "MultiEdit(*)",
      "Write(*)",
      "Read(*)",
      "Glob(*)",
      "LS(*)",
      "NotebookRead(*)",
      "NotebookEdit(*)"
    ],
    "deny": [
      "Bash(git commit*)",
      "Bash(git push*)",
      "Bash(rm*)",
      "Bash(sudo*)",
      "Bash(npm install*)",
      "Bash(pnpm install*)",
      "Bash(yarn install*)",
      "Read(.env*)",
      "Read(*.key)",
      "Read(*.secret)"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "powershell.exe -Command \"Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.MessageBox]::Show('Executing bash command...', 'Claude Code', 'OK', 'Information')\""
          }
        ]
      },
      {
        "matcher": "WebSearch",
        "hooks": [
          {
            "type": "command",
            "command": "echo '{\"decision\": \"block\", \"reason\": \"Use Bash(gemini -p \\\"WebSearch: <query>\\\") instead.\"}'"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "powershell.exe -Command \"Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.MessageBox]::Show('Claude Code has a notification for you.', 'Claude Code Notification', 'OK', 'Information')\""
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "powershell.exe -Command \"Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.MessageBox]::Show('Claude Code has finished the task.', 'Task Complete', 'OK', 'Information')\""
          }
        ]
      }
    ]
  },
}